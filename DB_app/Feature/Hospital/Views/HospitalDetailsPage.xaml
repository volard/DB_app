<Page
    mc:Ignorable="d"
    x:Class="DB_app.Views.HospitalDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:behaviors="using:DB_app.Behaviors"
    xmlns:components="using:DB_app.Views.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:DB_app.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:viewModel="using:DB_app.ViewModels"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Page.Resources>
        <helpers:NotConverter x:Key="NotConverter" />
        <helpers:IsNotNullConverter x:Key="IsNotNullConverter" />
        <helpers:VisibleIfConverter x:Key="VisibleIf" />
        <helpers:VisibleIfNotNull x:Key="VisibleIfNotNull" />
        <helpers:CollapsedIf x:Key="CollapsedIf" />
    </Page.Resources>

    <!--#region Header-->
    <behaviors:NavigationViewHeaderBehavior.HeaderTemplate>
        <DataTemplate x:DataType="viewModel:HospitalDetailsViewModel">
            <CommandBar
                Background="Transparent"
                DefaultLabelPosition="Right"
                HorizontalAlignment="Stretch">
                <CommandBar.Content>
                    <Grid>

                        <TextBlock
                            Margin="10,0,0,0"
                            Style="{ThemeResource TitleTextBlockStyle}"
                            Text="{x:Bind PageTitle, Mode=OneWay}"
                            x:Name="Title" />

                        <InfoBadge
                            Height="11"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Visibility="{x:Bind CurrentHospital.IsModified, Mode=OneWay}"
                            Width="11">

                            <InfoBadge.IconSource>
                                <FontIconSource FontFamily="Segoe Fluent Icons" Glyph="&#xEB52;" />
                            </InfoBadge.IconSource>

                        </InfoBadge>
                    </Grid>

                </CommandBar.Content>

                <AppBarButton
                    Click="SaveButton_Click"
                    Icon="Save"
                    IsEnabled="{Binding CurrentHospital.HasErrors, Converter={StaticResource NotConverter}, Mode=OneWay}"
                    Label="Save"
                    Visibility="{Binding CurrentHospital.IsInEdit, Converter={StaticResource VisibleIf}, Mode=OneWay}" />

                <AppBarButton
                    Click="BeginEdit_Click"
                    Icon="Edit"
                    Label="Edit"
                    Visibility="{x:Bind viewModel:Converters.CollapsedIfOneOfTwo(CurrentHospital.IsInEdit, CurrentHospital.IsNew), Mode=OneWay}" />

                <AppBarButton
                    Click="{x:Bind CurrentHospital.CancelEdit}"
                    Icon="Cancel"
                    Label="Cancel"
                    Visibility="{x:Bind viewModel:Converters.VisibleIfOneAndNotAnother(CurrentHospital.IsInEdit, CurrentHospital.IsNew), Mode=OneWay}" />

                <AppBarButton
                    Icon="Delete"
                    Label="Delete"
                    Visibility="{Binding CurrentHospital.IsNew, Converter={StaticResource CollapsedIf}, Mode=OneWay}" />

                <AppBarButton
                    Icon="Add"
                    Label="Add new"
                    Visibility="{x:Bind viewModel:Converters.CollapsedIfOneOfTwo(CurrentHospital.IsInEdit, CurrentHospital.IsNew), Mode=OneWay}" />
            </CommandBar>
        </DataTemplate>
    </behaviors:NavigationViewHeaderBehavior.HeaderTemplate>
    <!--#endregion-->


    <RelativePanel>
        <ScrollViewer
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            VerticalScrollBarVisibility="Auto"
            VerticalScrollMode="Auto"
            x:Name="DetailPanel">

            <StackPanel>

                <StackPanel.Resources>
                    <Style TargetType="muxc:Expander">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Margin" Value="0,10,0,0" />
                    </Style>
                </StackPanel.Resources>

                <!--#region Full name and hospital info-->
                <muxc:Expander ExpandDirection="Down" IsExpanded="True">

                    <muxc:Expander.Header>
                        <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="FullName" />
                    </muxc:Expander.Header>

                    <muxc:Expander.Content>
                        <StackPanel>
                            <RelativePanel HorizontalAlignment="Stretch">
                                <Button
                                    Background="Red"
                                    Click="MakeInactiveButton_ButtonClicked"
                                    Content="Make inactive"
                                    IsEnabled="{x:Bind ViewModel.CurrentHospital.IsActive, Mode=OneWay}"
                                    RelativePanel.AlignRightWithPanel="True"
                                    RelativePanel.AlignVerticalCenterWith="Surename_main_doctor"
                                    Visibility="{x:Bind viewModel:Converters.VisibleIfOneAndNotAnother(ViewModel.CurrentHospital.IsInEdit, ViewModel.CurrentHospital.IsNew), Mode=OneWay}" />


                                <!--  Surename doctor name  -->
                                <components:ValidationTextBox
                                    DataContext="{x:Bind ViewModel.CurrentHospital}"
                                    HeaderText="Main doctor's surename"
                                    IsReadOnly="{x:Bind ViewModel.CurrentHospital.IsInEdit, Converter={StaticResource NotConverter}, Mode=OneWay}"
                                    PlaceholderText="Enter name"
                                    PropertyName="Surename_main_doctor"
                                    Text="{x:Bind ViewModel.CurrentHospital.Surename_main_doctor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    x:Name="Surename_main_doctor" />

                            </RelativePanel>

                            <!--  Main doctor name  -->
                            <components:ValidationTextBox
                                DataContext="{x:Bind ViewModel.CurrentHospital}"
                                HeaderText="Main doctor's name"
                                IsReadOnly="{x:Bind ViewModel.CurrentHospital.IsInEdit, Converter={StaticResource NotConverter}, Mode=OneWay}"
                                PlaceholderText="Enter name"
                                PropertyName="Name_main_doctor"
                                Text="{x:Bind ViewModel.CurrentHospital.Name_main_doctor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                x:Name="Name_main_doctor" />

                            <!--  Middle doctor name  -->
                            <components:ValidationTextBox
                                DataContext="{x:Bind ViewModel.CurrentHospital}"
                                HeaderText="Main doctor's middlename"
                                IsReadOnly="{x:Bind ViewModel.CurrentHospital.IsInEdit, Converter={StaticResource NotConverter}, Mode=OneWay}"
                                PlaceholderText="Enter name"
                                PropertyName="Middlename_main_doctor"
                                Text="{x:Bind ViewModel.CurrentHospital.Middlename_main_doctor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                x:Name="Middlename_main_doctor" />

                        </StackPanel>
                    </muxc:Expander.Content>
                </muxc:Expander>
                <!--#endregion-->

                <!--#region Addresses list in expander-->
                <muxc:Expander
                    ExpandDirection="Down"
                    IsExpanded="True"
                    Visibility="{x:Bind viewModel:Converters.VisibleIf(ViewModel.CurrentHospital.IsActive), Mode=OneWay}"
                    x:Name="ExpanderAddresses">

                    <muxc:Expander.Header>
                        <Grid>
                            <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Addresses" />
                            <TextBlock
                                HorizontalAlignment="Right"
                                Text="{x:Bind ViewModel.CurrentHospital.ObservableLocations.Count, Mode=OneWay}"
                                VerticalAlignment="Center" />
                        </Grid>
                    </muxc:Expander.Header>

                    <muxc:Expander.Content>

                        <RelativePanel>

                            <CommandBar
                                Background="Transparent"
                                DefaultLabelPosition="Right"
                                HorizontalAlignment="Stretch"
                                Margin="0,30,0,0"
                                RelativePanel.AlignRightWithPanel="True"
                                VerticalContentAlignment="Center"
                                Visibility="{x:Bind viewModel:Converters.VisibleIf(ViewModel.CurrentHospital.IsInEdit), Mode=OneWay}"
                                x:Name="AddressCommandBar">


                                <CommandBar.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <FontIcon
                                            FontFamily="Segoe MDL2 Assets"
                                            Foreground="DodgerBlue"
                                            Glyph="&#xE946;"
                                            Margin="0,0,20,0">
                                            <ToolTipService.ToolTip>
                                                <ToolTip Content="At least one address have to be provided otherwise organisation becomes inactive" />
                                            </ToolTipService.ToolTip>

                                        </FontIcon>

                                        <ComboBox
                                            ItemsSource="{x:Bind ViewModel.AvailableAddresses}"
                                            PlaceholderText="Select new address"
                                            SelectedItem="{x:Bind ViewModel.SelectedAddress, Mode=TwoWay}"
                                            Width="380" />
                                    </StackPanel>

                                </CommandBar.Content>

                                <AppBarButton
                                    Click="{x:Bind AddSelectedButton_Clicked}"
                                    Icon="Add"
                                    IsEnabled="{x:Bind ViewModel.SelectedAddress, Converter={StaticResource IsNotNullConverter}, Mode=OneWay}"
                                    Label="Add selected"
                                    ToolTipService.ToolTip="Add selected"
                                    x:Name="AddressCommandBarAddButton" />

                                <AppBarButton
                                    Click="{x:Bind DeleteSelectedButton_Clicked}"
                                    Icon="Delete"
                                    IsEnabled="{x:Bind ViewModel.SelectedExistingLocation, Converter={StaticResource IsNotNullConverter}, Mode=OneWay}"
                                    Label="Delete"
                                    ToolTipService.ToolTip="Delete"
                                    x:Name="AddressCommandBarDeleteButton" />

                            </CommandBar>

                            <Grid Margin="0,20,0,0" RelativePanel.Below="AddressCommandBar">

                                <toolkit:DataGrid
                                    AutoGenerateColumns="False"
                                    CanUserReorderColumns="False"
                                    GridLinesVisibility="All"
                                    IsReadOnly="True"
                                    ItemsSource="{x:Bind ViewModel.CurrentHospital.ObservableLocations, Mode=OneWay}"
                                    SelectedItem="{x:Bind ViewModel.SelectedExistingLocation, Mode=TwoWay}"
                                    SelectionMode="Single"
                                    VerticalScrollBarVisibility="Auto"
                                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                                    x:Name="AddressGrid">

                                    <toolkit:DataGrid.Resources>
                                        <SolidColorBrush Color="Transparent" x:Key="DataGridColumnHeaderBackgroundColor" />
                                    </toolkit:DataGrid.Resources>

                                    <toolkit:DataGrid.Columns>

                                        <toolkit:DataGridTextColumn
                                            Binding="{Binding Address.City}"
                                            Header="City"
                                            Width="30*" />
                                        <toolkit:DataGridTextColumn
                                            Binding="{Binding Address.Street}"
                                            Header="Street"
                                            Width="30*" />
                                        <toolkit:DataGridTextColumn
                                            Binding="{Binding Address.Building}"
                                            Header="Building"
                                            Width="30*" />
                                    </toolkit:DataGrid.Columns>

                                </toolkit:DataGrid>


                                <muxc:ProgressBar
                                    HorizontalAlignment="Stretch"
                                    IsIndeterminate="True"
                                    Margin="0,0,0,0"
                                    VerticalAlignment="Top"
                                    Visibility="{x:Bind ViewModel.IsLoading, Mode=OneWay}" />
                            </Grid>

                        </RelativePanel>
                    </muxc:Expander.Content>
                </muxc:Expander>
                <!--#endregion-->

            </StackPanel>
        </ScrollViewer>

        <toolkit:InAppNotification
            RelativePanel.AlignBottomWithPanel="True"
            RelativePanel.AlignHorizontalCenterWithPanel="True"
            StackMode="Replace"
            x:Name="Notification" />

    </RelativePanel>
</Page>
