<Page
    x:Class="DB_app.Views.ProductDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:DB_app.Behaviors"
    xmlns:components="using:DB_app.Views.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:DB_app.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:viewModel="using:DB_app.ViewModels"
    mc:Ignorable="d">

    <Page.Resources>
        <helpers:NotConverter x:Key="NotConverter" />
        <helpers:VisibleIfConverter x:Key="VisibleIf" />
        <helpers:CollapsedIf x:Key="CollapsedIf" />
        <helpers:DoubleToIntConverter x:Key="DoubleToIntConverter" />
    </Page.Resources>


    <!--#region Header-->
    <behaviors:NavigationViewHeaderBehavior.HeaderTemplate>
        <DataTemplate x:DataType="viewModel:ProductDetailsViewModel">
            <CommandBar
                x:Name="MainCommandBar"
                HorizontalAlignment="Stretch"
                Background="Transparent"
                DefaultLabelPosition="Right">
                <CommandBar.Content>
                    <TextBlock Style="{ThemeResource TitleTextBlockStyle}" Text="New Product" />
                </CommandBar.Content>
                <AppBarButton
                    Click="SaveButton_Click"
                    Icon="Save"
                    IsEnabled="{Binding CurrentProduct.HasErrors, Converter={StaticResource NotConverter}, Mode=OneWay}"
                    Label="Save"
                    Visibility="{Binding CurrentProduct.IsInEdit, Converter={StaticResource VisibleIf}, Mode=OneWay}" />
                    
                <AppBarButton
                    Click="{x:Bind CurrentProduct.BeginEdit}"
                    Icon="Edit"
                    Label="Edit"
                    Visibility="{x:Bind viewModel:Converters.CollapsedIfOneOfTwo(CurrentProduct.IsInEdit, CurrentProduct.IsNew), Mode=OneWay}" />
                <AppBarButton
                    Click="{x:Bind CurrentProduct.EndEdit}"
                    Icon="Cancel"
                    Label="Cancel"
                    Visibility="{x:Bind viewModel:Converters.VisibleIfOneAndNotAnother(CurrentProduct.IsInEdit, CurrentProduct.IsNew), Mode=OneWay}" />
                <AppBarSeparator />
                <AppBarButton
                    Click="DeleteButton_Click"
                    Icon="Delete"
                    Label="Delete"
                    Visibility="{Binding CurrentProduct.IsNew, Converter={StaticResource CollapsedIf}, Mode=OneWay}" />
                <AppBarButton
                    Click="AddButton_Click"
                    Icon="Add"
                    Label="Add new" />
                    
            </CommandBar>
        </DataTemplate>
    </behaviors:NavigationViewHeaderBehavior.HeaderTemplate>
    <!--#endregion-->

    <Grid>

        <ScrollViewer
            x:Name="DetailPanel"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.Below="MainCommandBar"
            VerticalScrollBarVisibility="Auto"
            VerticalScrollMode="Auto">

            <StackPanel x:Name="StackPanel">

                <!--  Pharmacy selection  -->
                <RelativePanel>

                    <ComboBox
                        x:Name="ProductPharmacy"
                        Width="380"
                        Margin="0,20,16,8"
                        VerticalAlignment="Stretch"
                        DataContext="{x:Bind ViewModel.CurrentProduct, Mode=OneWay}"
                        DataContextChanged="Element_DataContextChanged"
                        Header="Pharmacy"
                        IsEnabled="{x:Bind ViewModel.CurrentProduct.IsInEdit, Mode=OneWay}"
                        ItemsSource="{x:Bind ViewModel.AvailablePharmacies, Mode=TwoWay}"
                        PlaceholderText="Select pharmacy"
                        SelectedItem="{x:Bind ViewModel.CurrentProduct.ProductPharmacy, Mode=TwoWay}"
                        SelectionChanged="ComboBox_SelectionChanged" />

                    <FontIcon
                        x:Name="ProductPharmacyIcon"
                        Margin="0,40,16,8"
                        FontSize="20"
                        Foreground="Orange"
                        Glyph="&#xE814;"
                        RelativePanel.AlignVerticalCenterWith="ProductPharmacy"
                        RelativePanel.RightOf="ProductPharmacy"
                        Visibility="Collapsed" />
                </RelativePanel>


                <!--  Medicine selection  -->
                <RelativePanel>


                    <ComboBox
                        x:Name="ProductMedicine"
                        Width="380"
                        Margin="0,20,16,8"
                        VerticalAlignment="Stretch"
                        DataContext="{x:Bind ViewModel.CurrentProduct, Mode=OneWay}"
                        DataContextChanged="Element_DataContextChanged"
                        Header="Medicine"
                        IsEnabled="{x:Bind ViewModel.CurrentProduct.IsInEdit, Mode=OneWay}"
                        ItemsSource="{x:Bind ViewModel.AvailableMedicines, Mode=TwoWay}"
                        PlaceholderText="Select medicine"
                        SelectedItem="{x:Bind ViewModel.CurrentProduct.ProductMedicine, Mode=TwoWay}"
                        SelectionChanged="ComboBox_SelectionChanged" />

                    <FontIcon
                        x:Name="ProductMedicineIcon"
                        Margin="0,40,16,8"
                        FontSize="20"
                        Foreground="Orange"
                        Glyph="&#xE814;"
                        RelativePanel.AlignVerticalCenterWith="ProductMedicine"
                        RelativePanel.RightOf="ProductMedicine"
                        Visibility="Collapsed" />


                </RelativePanel>

                <!--  Price input  -->
                <RelativePanel>


                    <NumberBox
                        x:Name="Price"
                        MinWidth="300"
                        Margin="0,20,16,8"
                        DataContext="{x:Bind ViewModel.CurrentProduct, Mode=OneWay}"
                        DataContextChanged="Element_DataContextChanged"
                        Header="Price"
                        IsEnabled="{x:Bind ViewModel.CurrentProduct.IsInEdit, Mode=OneWay}"
                        PlaceholderText="Input price"
                        ValueChanged="NumberBox_ValueChanged"
                        Value="{x:Bind ViewModel.CurrentProduct.Price, Mode=TwoWay}" />

                    <FontIcon
                        x:Name="PriceIcon"
                        Margin="0,40,16,8"
                        FontSize="20"
                        Foreground="Orange"
                        Glyph="&#xE814;"
                        RelativePanel.AlignVerticalCenterWith="Price"
                        RelativePanel.RightOf="Price"
                        Visibility="Collapsed" />


                </RelativePanel>


                <!--  Quantity input  -->
                <RelativePanel>


                    <NumberBox
                        x:Name="Quantity"
                        MinWidth="300"
                        Margin="0,20,16,8"
                        DataContext="{x:Bind ViewModel.CurrentProduct, Mode=OneWay}"
                        DataContextChanged="Element_DataContextChanged"
                        ValueChanged="NumberBox_ValueChanged"
                        IsEnabled="{x:Bind ViewModel.CurrentProduct.IsInEdit, Mode=OneWay}"
                        Header="Quantity"
                        PlaceholderText="Input quantity"
                        Value="{x:Bind ViewModel.CurrentProduct.Quantity, Mode=TwoWay}" />

                    <FontIcon
                        x:Name="QuantityIcon"
                        Margin="0,40,16,8"
                        FontSize="20"
                        Foreground="Orange"
                        Glyph="&#xE814;"
                        RelativePanel.AlignVerticalCenterWith="Quantity"
                        RelativePanel.RightOf="Quantity"
                        Visibility="Collapsed" />


                </RelativePanel>

                <!--  Notification  -->
                <toolkit:InAppNotification
                    x:Name="Notification"
                    RelativePanel.AlignBottomWithPanel="True"
                    RelativePanel.AlignHorizontalCenterWithPanel="True"
                    StackMode="Replace" />

            </StackPanel>



        </ScrollViewer>
    </Grid>

</Page>
